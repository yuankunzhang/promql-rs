vector_selector    = { (metric ~ label_matchers?) | label_matchers }
metric             = { identifier }
label_matchers     = { "{" ~ label_matcher_list? ~ "}" }
label_matcher_list = _{ label_matcher_item ~ ("," ~ label_matcher_item)* }
label_matcher_item = { identifier ~ match_op ~ string }
match_op           = { "!=" | "=~" | "!~" | "=" }

duration = {
    duration_millisecond
    | duration_second
    | duration_minute
    | duration_hour
    | duration_day
    | duration_week
    | duration_year
}
duration_year = @{ int ~ "y" ~ (
    duration_millisecond
    | duration_second
    | duration_minute
    | duration_hour
    | duration_day
    | duration_week
)? }
duration_week = @{ int ~ "w" ~ (
    duration_millisecond
    | duration_second
    | duration_minute
    | duration_hour
    | duration_day
)? }
duration_day = @{ int ~ "d" ~ (
    duration_millisecond
    | duration_second
    | duration_minute
    | duration_hour
)? }
duration_hour = @{ int ~ "h" ~ (
    duration_millisecond
    | duration_second
    | duration_minute
)? }
duration_minute = @{ int ~ "m" ~ (
    duration_millisecond
    | duration_second
)? }
duration_second = @{ int ~ "s" ~ (
    duration_millisecond
)? }
duration_millisecond = @{ int ~ "ms" }

number_literal = { number }

number = @{ ("+" | "-")? ~ (hex | oct | dec | nan | inf)}
hex    = @{ "0" ~ ("x" | "X") ~ ASCII_HEX_DIGIT+ }
oct    = @{ "0" ~ ('0'..'7')+ }
dec    = @{ (int ~ frac? ~ exp?) | (frac ~ exp?) }
frac   = @{ "." ~ ASCII_DIGIT* ~ exp? }
int    = @{ "0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* }
exp    = @{ ("E" | "e") ~ ("+" | "-")? ~ ASCII_DIGIT+ }
nan    = @{ ("N" | "n") ~ ("A" | "a") ~ ("N" | "n") }
inf    = @{ ("I" | "i") ~ ("N" | "n") ~ ("F" | "f") }

string_literal = { string }

string              = _{ double_quoted | single_quoted }
double_quoted       = _{ "\"" ~ double_quoted_inner ~ "\"" }
single_quoted       = _{ "'" ~ single_quoted_inner ~ "'" }
double_quoted_inner = @{ ((!("\"" | "\\") ~ ANY) | escape)* }
single_quoted_inner = @{ ((!("'" | "\\") ~ ANY) | escape)* }

escape  = @{ "\\" ~ ("\\" | "\"" | "'" | "/" | "a" | "b" | "f" | "n" | "r" | "t" | "v" | unicode) }
unicode = @{
    ('0'..'7'{3})
    | ("x" ~ ASCII_HEX_DIGIT{2})
    | ("u" ~ ASCII_HEX_DIGIT{4})
    | ("U" ~ ASCII_HEX_DIGIT{8})
}

identifier = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }